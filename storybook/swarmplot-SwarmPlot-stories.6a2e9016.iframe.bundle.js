"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4957],{"./stories/swarmplot/SwarmPlot.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,CustomCircleComponent:()=>CustomCircleComponent,ExtraLayers:()=>ExtraLayers,UsingAnnotations:()=>UsingAnnotations,UsingTimeScale:()=>UsingTimeScale,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SwarmPlot_stories});var nivo_generators_es=__webpack_require__("../packages/generators/dist/nivo-generators.es.js"),nivo_swarmplot_es=__webpack_require__("../packages/swarmplot/dist/nivo-swarmplot.es.js"),react=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),nivo_core_es=__webpack_require__("../packages/core/dist/nivo-core.es.js"),jsx_runtime=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const BackgroundLayer=({xScale,innerHeight})=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("defs",{children:(0,jsx_runtime.jsx)(nivo_core_es.rr,{id:"linesPattern",spacing:10,rotation:-45,background:"rgb(199, 234, 229)",color:"rgb(128, 205, 193)",lineWidth:4})}),(0,jsx_runtime.jsx)("rect",{x:xScale(150),y:0,width:xScale(300)-xScale(150),height:innerHeight,fill:"url(#linesPattern)"}),(0,jsx_runtime.jsx)("text",{x:xScale(225),y:26,textAnchor:"middle",stroke:"rgb(199, 234, 229)",strokeWidth:4,style:{fontSize:14,fontWeight:800},children:"the sweet spot"}),(0,jsx_runtime.jsx)("text",{x:xScale(225),y:26,textAnchor:"middle",fill:"rgb(0, 60, 48)",style:{fontSize:14,fontWeight:800},children:"the sweet spot"})]}),SwarmPlotExtraLayers=()=>{const data=(0,react.useMemo)((()=>(0,nivo_generators_es.gq)(["group"],{min:60,max:60})),[]),[,setCurrentIndex]=(0,react.useState)(13);return(0,jsx_runtime.jsx)(nivo_swarmplot_es.y8,{width:800,height:400,margin:{top:120,right:40,bottom:40,left:40},data:data.data,groups:data.groups,groupBy:"group",id:"id",value:"price",valueScale:{type:"linear",min:0,max:500},size:{key:"volume",values:[4,20],sizes:[18,32]},spacing:2,layers:["grid","axes",BackgroundLayer,"circles","annotations"],theme:{background:"rgb(199, 234, 229)"},colors:{scheme:"brown_blueGreen"},colorBy:"id",borderWidth:4,borderColor:"rgb(199, 234, 229)",onClick:node=>setCurrentIndex(node.index),enableGridY:!1,axisLeft:null,axisRight:null,layout:"horizontal"})};SwarmPlotExtraLayers.displayName="SwarmPlotExtraLayers";var nivo_colors_es=__webpack_require__("../packages/colors/dist/nivo-colors.es.js"),nivo_pie_es=__webpack_require__("../packages/pie/dist/nivo-pie.es.js");const CustomCircle=props=>{const getArcColor=(0,nivo_colors_es.U)({scheme:"purple_orange"},(v=>v)),{dataWithArc,arcGenerator}=(0,nivo_pie_es.wu)({data:props.node.data.categories.map(((value,id)=>({id,value,hidden:!1,data:value,color:"",formattedValue:`${value}`,label:`${value}`}))),radius:props.node.size/2,innerRadius:props.node.size/2*.7,sortByValue:!0});return(0,jsx_runtime.jsxs)("g",{transform:`translate(${props.node.x},${props.node.y})`,children:[(0,jsx_runtime.jsx)("circle",{r:props.node.size/2,stroke:"rgb(216, 218, 235)",strokeWidth:12}),(0,jsx_runtime.jsx)("circle",{r:props.node.size/2,fill:"rgb(45, 0, 75)",stroke:"rgb(45, 0, 75)",strokeWidth:6}),dataWithArc.map(((datum,i)=>(0,jsx_runtime.jsx)("path",{d:arcGenerator(datum.arc),fill:getArcColor(i)},i))),props.node.size>52&&(0,jsx_runtime.jsx)("text",{fill:"white",textAnchor:"middle",dominantBaseline:"central",style:{fontSize:14,fontWeight:800},children:props.node.value})]})};CustomCircle.displayName="CustomCircle";const ShadowsLayer=({nodes})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:nodes.map((node=>(0,jsx_runtime.jsx)("circle",{cx:node.x,cy:node.y+.2*node.size,r:.55*node.size,fill:"rgba(45, 0, 75, .15)"},node.id)))}),theme={background:"rgb(216, 218, 235)",axis:{ticks:{line:{stroke:"rgb(84, 39, 136)"},text:{fill:"rgb(84, 39, 136)",fontWeight:600}},legend:{text:{fill:"rgb(84, 39, 136)",fontSize:15}}},grid:{line:{stroke:"rgb(128, 115, 172)",strokeDasharray:"2 4",strokeWidth:2}}},SwarmPlotCustomCircle=()=>{const data=(0,react.useMemo)((()=>(0,nivo_generators_es.gq)(["group"],{min:32,max:32,categoryCount:9})),[]);return(0,jsx_runtime.jsx)(nivo_swarmplot_es.y8,{width:1e3,height:400,margin:{top:30,right:60,bottom:80,left:60},data:data.data,groups:data.groups,groupBy:"group",id:"id",value:"price",valueScale:{type:"linear",min:0,max:500},size:{key:"volume",values:[4,20],sizes:[30,80]},spacing:12,enableGridY:!1,axisTop:null,axisRight:null,axisLeft:null,axisBottom:{legend:"custom node rendering with donut charts using usePie() React hook from @nivo/pie package",legendPosition:"middle",legendOffset:50},circleComponent:CustomCircle,layers:["grid","axes",ShadowsLayer,"circles"],layout:"horizontal",theme})};SwarmPlotCustomCircle.displayName="SwarmPlotCustomCircle";const SwarmPlot_stories={title:"SwarmPlot",component:nivo_swarmplot_es.y8,tags:["autodocs"]},commonProps={width:700,height:360,margin:{top:40,right:40,bottom:40,left:40},groupBy:"group",id:"id",value:"price",valueScale:{type:"linear",min:0,max:500},size:10,...(0,nivo_generators_es.gq)(["group A","group B","group C"],{min:40,max:60})},Basic={render:()=>(0,jsx_runtime.jsx)(nivo_swarmplot_es.y8,{...commonProps})},ExtraLayers={render:()=>(0,jsx_runtime.jsx)(SwarmPlotExtraLayers,{})},CustomCircleComponent={render:()=>(0,jsx_runtime.jsx)(SwarmPlotCustomCircle,{})},UsingAnnotations={render:()=>(0,jsx_runtime.jsx)(nivo_swarmplot_es.y8,{...commonProps,useMesh:!0,annotations:[{type:"circle",match:{index:40},noteX:40,noteY:40,offset:4,note:"Node at index: 40"},{type:"rect",match:{index:80},noteX:-40,noteY:-40,offset:4,note:"Node at index: 80"},{type:"dot",match:{index:120},noteX:0,noteY:{abs:-20},size:6,note:"Node at index: 120"}]})},localeTimeFormat=value=>value.toLocaleString(),UsingTimeScale={render:()=>(0,jsx_runtime.jsx)(nivo_swarmplot_es.y8,{...commonProps,data:[{group:"group A",id:"21c4519f-713f-473b-8ce5-e4078d8822c9",timestamp:"2020-09-04T23:10:13.002Z",volume:18},{group:"group A",id:"91c4519f-713f-473b-8ce5-e4078d882e77",timestamp:"2020-09-05T15:10:13.002Z",volume:16},{group:"group B",id:"91c4519f-713f-473b-8ce5-e4078d882e67",timestamp:"2020-09-05T05:10:13.002Z",volume:16},{group:"group C",id:"91c4519f-713f-473b-8ce5-e4078d882t67",timestamp:"2020-09-05T05:10:13.002Z",volume:14}],margin:{top:40,right:40,bottom:40,left:100},value:"timestamp",valueFormat:localeTimeFormat,valueScale:{format:"%Y-%m-%dT%H:%M:%S.%LZ",type:"time"},size:{key:"volume",values:[4,20],sizes:[6,20]},axisTop:null,axisRight:null,axisBottom:{format:localeTimeFormat,tickSize:10,tickPadding:5,tickRotation:0,legend:"timestamp",legendPosition:"middle",legendOffset:46,tickValues:"every 4 hours"},axisLeft:{tickSize:10,tickPadding:5,tickRotation:0,legend:"groups",legendPosition:"middle",legendOffset:-76},layout:"horizontal"})};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: () => <SwarmPlot {...commonProps} />\n}",...Basic.parameters?.docs?.source}}},ExtraLayers.parameters={...ExtraLayers.parameters,docs:{...ExtraLayers.parameters?.docs,source:{originalSource:"{\n  render: () => <SwarmPlotExtraLayers />\n}",...ExtraLayers.parameters?.docs?.source}}},CustomCircleComponent.parameters={...CustomCircleComponent.parameters,docs:{...CustomCircleComponent.parameters?.docs,source:{originalSource:"{\n  render: () => <SwarmPlotCustomCircle />\n}",...CustomCircleComponent.parameters?.docs?.source}}},UsingAnnotations.parameters={...UsingAnnotations.parameters,docs:{...UsingAnnotations.parameters?.docs,source:{originalSource:"{\n  render: () => <SwarmPlot {...commonProps} useMesh={true} annotations={[{\n    type: 'circle',\n    match: {\n      index: 40\n    },\n    noteX: 40,\n    noteY: 40,\n    offset: 4,\n    note: 'Node at index: 40'\n  }, {\n    type: 'rect',\n    match: {\n      index: 80\n    },\n    noteX: -40,\n    noteY: -40,\n    offset: 4,\n    note: 'Node at index: 80'\n  }, {\n    type: 'dot',\n    match: {\n      index: 120\n    },\n    noteX: 0,\n    noteY: {\n      abs: -20\n    },\n    size: 6,\n    note: 'Node at index: 120'\n  }]} />\n}",...UsingAnnotations.parameters?.docs?.source}}},UsingTimeScale.parameters={...UsingTimeScale.parameters,docs:{...UsingTimeScale.parameters?.docs,source:{originalSource:"{\n  render: () => <SwarmPlot {...commonProps} data={[{\n    group: 'group A',\n    id: '21c4519f-713f-473b-8ce5-e4078d8822c9',\n    timestamp: '2020-09-04T23:10:13.002Z',\n    volume: 18\n  }, {\n    group: 'group A',\n    id: '91c4519f-713f-473b-8ce5-e4078d882e77',\n    timestamp: '2020-09-05T15:10:13.002Z',\n    volume: 16\n  }, {\n    group: 'group B',\n    id: '91c4519f-713f-473b-8ce5-e4078d882e67',\n    timestamp: '2020-09-05T05:10:13.002Z',\n    volume: 16\n  }, {\n    group: 'group C',\n    id: '91c4519f-713f-473b-8ce5-e4078d882t67',\n    timestamp: '2020-09-05T05:10:13.002Z',\n    volume: 14\n  }]} margin={{\n    top: 40,\n    right: 40,\n    bottom: 40,\n    left: 100\n  }} value=\"timestamp\" valueFormat={localeTimeFormat} valueScale={{\n    format: '%Y-%m-%dT%H:%M:%S.%LZ',\n    type: 'time'\n  }} size={{\n    key: 'volume',\n    values: [4, 20],\n    sizes: [6, 20]\n  }} axisTop={null} axisRight={null} axisBottom={{\n    format: localeTimeFormat,\n    tickSize: 10,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'timestamp',\n    legendPosition: 'middle',\n    legendOffset: 46,\n    tickValues: 'every 4 hours'\n  }} axisLeft={{\n    tickSize: 10,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'groups',\n    legendPosition: 'middle',\n    legendOffset: -76\n  }} layout=\"horizontal\" />\n}",...UsingTimeScale.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","ExtraLayers","CustomCircleComponent","UsingAnnotations","UsingTimeScale"]}}]);