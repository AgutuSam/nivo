"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8157],{"./stories/network/NetworkCanvas.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,CustomCanvasRef:()=>CustomCanvasRef,CustomNodeRenderer:()=>CustomNodeRenderer,CustomNodeTooltip:()=>CustomNodeTooltip,OnClickHandler:()=>OnClickHandler,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_nivo_generators__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../packages/generators/dist/nivo-generators.es.js"),_nivo_network__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../packages/network/dist/nivo-network.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"NetworkCanvas",component:_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,tags:["autodocs"],argTypes:{onClick:{action:"clicked"}}},commonProperties={data:(0,_nivo_generators__WEBPACK_IMPORTED_MODULE_1__.$j)(),width:600,height:600,nodeColor:node=>node.color,repulsivity:10,iterations:60,linkDistance:link=>1.3*link.distance},Basic={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,{...commonProperties})},CustomNodeTooltipComponent=({node})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{background:node.color,color:"#000000",padding:"9px 12px",borderRadius:"2px",boxShadow:"0 3px 9px rgba(0, 0, 0, .35)"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("strong",{children:["ID: ",node.id]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),"size: ",node.size]});CustomNodeTooltipComponent.displayName="CustomNodeTooltipComponent";const CustomNodeTooltip={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,{...commonProperties,nodeTooltip:CustomNodeTooltipComponent})},customNodeRenderer=(ctx,node)=>{ctx.fillStyle=node.color,ctx.beginPath(),ctx.moveTo(node.x,node.y-node.size/2),ctx.lineTo(node.x+node.size/2,node.y+node.size/2),ctx.lineTo(node.x-node.size/2,node.y+node.size/2),ctx.fill()},CustomNodeRenderer={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,{...commonProperties,renderNode:customNodeRenderer})},OnClickHandler={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,{...commonProperties,onClick:args.onClick})},CustomCanvasRef={render:()=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{onClick:()=>(ref=>{const canvas=ref.current,link=document.createElement("a");link.download="nivo-network.png",link.href=canvas.toDataURL("image/png"),link.click()})(ref),children:"Download PNG"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_network__WEBPACK_IMPORTED_MODULE_2__.OZ,{...commonProperties,ref})]})}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: () => <NetworkCanvas<Node, Link> {...commonProperties} />\n}",...Basic.parameters?.docs?.source}}},CustomNodeTooltip.parameters={...CustomNodeTooltip.parameters,docs:{...CustomNodeTooltip.parameters?.docs,source:{originalSource:"{\n  render: () => <NetworkCanvas<Node, Link> {...commonProperties} nodeTooltip={CustomNodeTooltipComponent} />\n}",...CustomNodeTooltip.parameters?.docs?.source}}},CustomNodeRenderer.parameters={...CustomNodeRenderer.parameters,docs:{...CustomNodeRenderer.parameters?.docs,source:{originalSource:"{\n  render: () => <NetworkCanvas<Node, Link> {...commonProperties} renderNode={customNodeRenderer} />\n}",...CustomNodeRenderer.parameters?.docs?.source}}},OnClickHandler.parameters={...OnClickHandler.parameters,docs:{...OnClickHandler.parameters?.docs,source:{originalSource:"{\n  render: args => <NetworkCanvas<Node, Link> {...commonProperties} onClick={args.onClick} />\n}",...OnClickHandler.parameters?.docs?.source}}},CustomCanvasRef.parameters={...CustomCanvasRef.parameters,docs:{...CustomCanvasRef.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const ref = useRef(undefined);\n    const download = ref => {\n      const canvas = ref.current;\n      const link = document.createElement('a');\n      link.download = 'nivo-network.png';\n      link.href = canvas.toDataURL('image/png');\n      link.click();\n    };\n    return <>\n                <button onClick={() => download(ref)}>Download PNG</button>\n                <NetworkCanvas<Node, Link> {...commonProperties} ref={ref} />\n            </>;\n  }\n}",...CustomCanvasRef.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","CustomNodeTooltip","CustomNodeRenderer","OnClickHandler","CustomCanvasRef"]}}]);