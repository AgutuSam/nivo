"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[2028],{"./stories/treemap/TreeMap.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTooltip:()=>CustomTooltip,PatternsAndGradients:()=>PatternsAndGradients,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _nivo_generators__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../packages/generators/dist/nivo-generators.es.js"),_nivo_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../packages/core/dist/nivo-core.es.js"),_nivo_treemap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../packages/treemap/dist/nivo-treemap.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"TreeMap",component:_nivo_treemap__WEBPACK_IMPORTED_MODULE_2__.SY,tags:["autodocs"]},commonProperties={width:900,height:400,data:(0,_nivo_generators__WEBPACK_IMPORTED_MODULE_0__.UE)(),identity:"name",value:"loc",valueFormat:".02s",labelSkipSize:16},CustomTooltip={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_treemap__WEBPACK_IMPORTED_MODULE_2__.SY,{...commonProperties,tooltip:({node})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("strong",{style:{color:node.color},children:[node.pathComponents.join(" / "),": ",node.formattedValue]}),theme:{tooltip:{container:{background:"#333"}}}})},PatternsAndGradients={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_treemap__WEBPACK_IMPORTED_MODULE_2__.SY,{...commonProperties,nodeOpacity:1,labelTextColor:{from:"color",modifiers:[["darker",3]]},parentLabelTextColor:{from:"color",modifiers:[["darker",3]]},defs:[(0,_nivo_core__WEBPACK_IMPORTED_MODULE_1__.c$)("gradient",[{offset:0,color:"#ffffff"},{offset:15,color:"inherit"},{offset:100,color:"inherit"}],{gradientTransform:"rotate(-90 0.5 0.5)"}),(0,_nivo_core__WEBPACK_IMPORTED_MODULE_1__.Qr)("pattern",{background:"inherit",color:"#ffffff",size:1,padding:4,stagger:!0})],fill:[{match:node=>["viz","text","utils"].includes(node.pathComponents[1]),id:"gradient"},{match:node=>["set","generators","misc"].includes(node.pathComponents[1]),id:"pattern"}]})};CustomTooltip.parameters={...CustomTooltip.parameters,docs:{...CustomTooltip.parameters?.docs,source:{originalSource:"{\n  render: () => <TreeMap {...commonProperties} tooltip={({\n    node\n  }) => <strong style={{\n    color: node.color\n  }}>\n                    {node.pathComponents.join(' / ')}: {node.formattedValue}\n                </strong>} theme={{\n    tooltip: {\n      container: {\n        background: '#333'\n      }\n    }\n  }} />\n}",...CustomTooltip.parameters?.docs?.source}}},PatternsAndGradients.parameters={...PatternsAndGradients.parameters,docs:{...PatternsAndGradients.parameters?.docs,source:{originalSource:"{\n  render: () => <TreeMap {...commonProperties} nodeOpacity={1} labelTextColor={{\n    from: 'color',\n    modifiers: [['darker', 3]]\n  }} parentLabelTextColor={{\n    from: 'color',\n    modifiers: [['darker', 3]]\n  }} defs={[linearGradientDef('gradient', [{\n    offset: 0,\n    color: '#ffffff'\n  }, {\n    offset: 15,\n    color: 'inherit'\n  }, {\n    offset: 100,\n    color: 'inherit'\n  }], {\n    gradientTransform: 'rotate(-90 0.5 0.5)'\n  }), patternDotsDef('pattern', {\n    background: 'inherit',\n    color: '#ffffff',\n    size: 1,\n    padding: 4,\n    stagger: true\n  })]} fill={[{\n    match: node => ['viz', 'text', 'utils'].includes(node.pathComponents[1]),\n    id: 'gradient'\n  }, {\n    match: node => ['set', 'generators', 'misc'].includes(node.pathComponents[1]),\n    id: 'pattern'\n  }]} />\n}",...PatternsAndGradients.parameters?.docs?.source}}};const __namedExportsOrder=["CustomTooltip","PatternsAndGradients"]}}]);