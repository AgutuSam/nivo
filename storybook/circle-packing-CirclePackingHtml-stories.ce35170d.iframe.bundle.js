"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[711],{"./stories/circle-packing/CirclePackingHtml.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,CustomTooltip:()=>CustomTooltip,RenderingLeavesOnly:()=>RenderingLeavesOnly,WithFormattedValues:()=>WithFormattedValues,ZoomOnClick:()=>ZoomOnClick,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_nivo_generators__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../packages/generators/dist/nivo-generators.es.js"),_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../packages/circle-packing/dist/nivo-circle-packing.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"CirclePackingHtml",component:_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,tags:["autodocs"]},commonProperties={width:900,height:500,data:(0,_nivo_generators__WEBPACK_IMPORTED_MODULE_1__.UE)(),padding:2,id:"name",value:"loc"},Basic={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,{...commonProperties})},RenderingLeavesOnly={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,{...commonProperties,leavesOnly:!0})},WithFormattedValues={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,{...commonProperties,valueFormat:value=>`${Number(value).toLocaleString("ru-RU",{minimumFractionDigits:2})} ₽`})},CustomTooltip={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,{...commonProperties,tooltip:({id,value,color})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("strong",{style:{color},children:[id,": ",value]}),theme:{tooltip:{container:{background:"#333"}}}})},ZoomOnClick={render:()=>{const[zoomedId,setZoomedId]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_nivo_circle_packing__WEBPACK_IMPORTED_MODULE_2__.a4,{...commonProperties,enableLabels:!0,labelsSkipRadius:16,labelsFilter:label=>0===label.node.height,labelTextColor:{from:"color",modifiers:[["darker",2]]},zoomedId,motionConfig:"slow",onClick:node=>{setZoomedId(zoomedId===node.id?null:node.id)}})}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: () => <CirclePackingHtml {...commonProperties} />\n}",...Basic.parameters?.docs?.source}}},RenderingLeavesOnly.parameters={...RenderingLeavesOnly.parameters,docs:{...RenderingLeavesOnly.parameters?.docs,source:{originalSource:"{\n  render: () => <CirclePackingHtml {...commonProperties} leavesOnly />\n}",...RenderingLeavesOnly.parameters?.docs?.source}}},WithFormattedValues.parameters={...WithFormattedValues.parameters,docs:{...WithFormattedValues.parameters?.docs,source:{originalSource:"{\n  render: () => <CirclePackingHtml {...commonProperties} valueFormat={value => `${Number(value).toLocaleString('ru-RU', {\n    minimumFractionDigits: 2\n  })} ₽`} />\n}",...WithFormattedValues.parameters?.docs?.source}}},CustomTooltip.parameters={...CustomTooltip.parameters,docs:{...CustomTooltip.parameters?.docs,source:{originalSource:"{\n  render: () => <CirclePackingHtml {...commonProperties} tooltip={({\n    id,\n    value,\n    color\n  }) => <strong style={{\n    color\n  }}>\n                    {id}: {value}\n                </strong>} theme={{\n    tooltip: {\n      container: {\n        background: '#333'\n      }\n    }\n  }} />\n}",...CustomTooltip.parameters?.docs?.source}}},ZoomOnClick.parameters={...ZoomOnClick.parameters,docs:{...ZoomOnClick.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [zoomedId, setZoomedId] = useState<string | null>(null);\n    return <CirclePackingHtml {...commonProperties} enableLabels labelsSkipRadius={16} labelsFilter={label => label.node.height === 0} labelTextColor={{\n      from: 'color',\n      modifiers: [['darker', 2]]\n    }} zoomedId={zoomedId} motionConfig=\"slow\" onClick={node => {\n      setZoomedId(zoomedId === node.id ? null : node.id);\n    }} />;\n  }\n}",...ZoomOnClick.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","RenderingLeavesOnly","WithFormattedValues","CustomTooltip","ZoomOnClick"]}}]);